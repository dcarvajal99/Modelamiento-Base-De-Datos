--------------------------------------------------------------------------------
-- MiniMarket “Doña Marta” – Oracle 21c
-- Drop + DDL + Reglas + Poblamiento + Consultas
--------------------------------------------------------------------------------

/* Limpieza de base de datos. 
    ================================
    PARA EL QUE EJECUTE ESTO ES OPCIONAL
    ================================
*/
BEGIN
  FOR t IN (
    SELECT table_name FROM user_tables WHERE table_name IN
    ('DETALLE_VENTA','VENTA','VENDEDOR','ADMINISTRATIVO','EMPLEADO','PRODUCTO',
     'PROVEEDOR','MARCA','CATEGORIA','MEDIO_PAGO','SALUD','AFP','COMUNA','REGION')
  ) LOOP
    EXECUTE IMMEDIATE 'DROP TABLE '||t.table_name||' CASCADE CONSTRAINTS';
  END LOOP;
END;
/

BEGIN
  FOR s IN (SELECT sequence_name FROM user_sequences
            WHERE sequence_name IN ('SEQ_EMPLEADO','SEQ_SALUD')) LOOP
    EXECUTE IMMEDIATE 'DROP SEQUENCE '||s.sequence_name;
  END LOOP;
END;
/

/* 1) UBICACIÓN */
CREATE TABLE REGION (
  id_region  NUMBER(4)      CONSTRAINT REGION_PK PRIMARY KEY,
  nom_region VARCHAR2(255)  NOT NULL
);

CREATE TABLE COMUNA (
  id_comuna  NUMBER(4)      CONSTRAINT COMUNA_PK PRIMARY KEY,
  nom_comuna VARCHAR2(100)  NOT NULL,
  cod_region NUMBER(4)      NOT NULL
    CONSTRAINT COMUNA_FK_REGION REFERENCES REGION(id_region)
);

/* 2) PREVISIONALES / MEDIOS */
CREATE TABLE AFP (
  id_afp  NUMBER(5)
          GENERATED ALWAYS AS IDENTITY (START WITH 210 INCREMENT BY 6)
          CONSTRAINT AFP_PK PRIMARY KEY,
  nom_afp VARCHAR2(255) NOT NULL
);

CREATE TABLE SALUD (
  id_salud  NUMBER(4)    CONSTRAINT SALUD_PK PRIMARY KEY,
  nom_salud VARCHAR2(40) NOT NULL
);
CREATE SEQUENCE SEQ_SALUD START WITH 2050 INCREMENT BY 10 NOCACHE;

CREATE TABLE MEDIO_PAGO (
  id_mpago      NUMBER(3)
                GENERATED ALWAYS AS IDENTITY (START WITH 11 INCREMENT BY 1)
                CONSTRAINT MEDIO_PAGO_PK PRIMARY KEY,
  nombre_mpago  VARCHAR2(50) NOT NULL
);

/* 3) PROVEEDOR */
CREATE TABLE PROVEEDOR (
  id_proveedor      NUMBER(5)       CONSTRAINT PROVEEDOR_PK PRIMARY KEY,
  nombre_proveedor  VARCHAR2(150)   NOT NULL,
  rut_proveedor     VARCHAR2(10)    NOT NULL,
  telefono          VARCHAR2(10)    NOT NULL,
  email             VARCHAR2(200)   NOT NULL,
  direccion         VARCHAR2(200)   NOT NULL,
  cod_comuna        NUMBER(4)       NOT NULL
    CONSTRAINT PROVEEDOR_FK_COMUNA REFERENCES COMUNA(id_comuna)
);

/* 4) CATÁLOGOS PRODUCTO */
CREATE TABLE MARCA (
  id_marca     NUMBER(3)      CONSTRAINT MARCA_PK PRIMARY KEY,
  nombre_marca VARCHAR2(25)   NOT NULL
);

CREATE TABLE CATEGORIA (
  id_categoria     NUMBER(3)       CONSTRAINT CATEGORIA_PK PRIMARY KEY,
  nombre_categoria VARCHAR2(255)   NOT NULL
);

CREATE TABLE PRODUCTO (
  id_producto     NUMBER(4)      CONSTRAINT PRODUCTO_PK PRIMARY KEY,
  nombre_producto VARCHAR2(100)  NOT NULL,
  precio_unitario NUMBER,
  origen_nacional CHAR(1)        NOT NULL,
  stock_minimo    NUMBER(3)      NOT NULL,
  activo          CHAR(1)        NOT NULL,
  cod_marca       NUMBER(3)      NOT NULL
    CONSTRAINT PRODUCTO_FK_MARCA     REFERENCES MARCA(id_marca),
  cod_categoria   NUMBER(3)      NOT NULL
    CONSTRAINT PRODUCTO_FK_CATEGORIA REFERENCES CATEGORIA(id_categoria),
  cod_proveedor   NUMBER(5)      NOT NULL
    CONSTRAINT PRODUCTO_FK_PROVEEDOR REFERENCES PROVEEDOR(id_proveedor)
);

/* 5) EMPLEADOS / SUBTIPOS */
CREATE SEQUENCE SEQ_EMPLEADO START WITH 750 INCREMENT BY 3 NOCACHE;

CREATE TABLE EMPLEADO (
  id_empleado        NUMBER(4)     CONSTRAINT EMPLEADO_PK PRIMARY KEY,
  rut_empleado       VARCHAR2(10)  NOT NULL,
  nombre_empleado    VARCHAR2(25)  NOT NULL,
  apellido_paterno   VARCHAR2(25)  NOT NULL,
  apellido_materno   VARCHAR2(25)  NOT NULL,
  fecha_contratacion DATE          NOT NULL,
  sueldo_base        NUMBER(10)    NOT NULL,
  bono_jefatura      NUMBER(10),
  activo             CHAR(1)       NOT NULL,
  tipo_empleado      VARCHAR2(25)  NOT NULL,
  cod_empleado       NUMBER(4),
  cod_salud          NUMBER(4)     NOT NULL
    CONSTRAINT EMPLEADO_FK_SALUD REFERENCES SALUD(id_salud),
  cod_afp            NUMBER(5)     NOT NULL
    CONSTRAINT EMPLEADO_FK_AFP   REFERENCES AFP(id_afp),
  CONSTRAINT EMPLEADO_FK_EMPLEADO FOREIGN KEY (cod_empleado)
    REFERENCES EMPLEADO(id_empleado)
);

CREATE TABLE ADMINISTRATIVO (
  id_empleado NUMBER(4)
    CONSTRAINT ADMINISTRATIVO_PK PRIMARY KEY
    CONSTRAINT ADMIN_FK_EMPLEADO REFERENCES EMPLEADO(id_empleado)
);

CREATE TABLE VENDEDOR (
  id_empleado    NUMBER(4)
    CONSTRAINT VENDEDOR_PK PRIMARY KEY
    CONSTRAINT VENDEDOR_FK_EMPLEADO REFERENCES EMPLEADO(id_empleado),
  comision_venta NUMBER(5,2) NOT NULL
);

/* 6) VENTAS */
CREATE TABLE VENTA (
  id_venta     NUMBER(4)
               GENERATED BY DEFAULT AS IDENTITY (START WITH 5050 INCREMENT BY 3)
               CONSTRAINT VENTA_PK PRIMARY KEY,
  fecha_venta  DATE        NOT NULL,
  total_venta  NUMBER(10)  NOT NULL,
  cod_mpago    NUMBER(3)   NOT NULL
    CONSTRAINT VENTA_FK_MEDIO_PAGO REFERENCES MEDIO_PAGO(id_mpago),
  cod_empleado NUMBER(4)   NOT NULL
    CONSTRAINT VENTA_FK_EMPLEADO   REFERENCES EMPLEADO(id_empleado)
);

CREATE TABLE DETALLE_VENTA (
  cod_venta    NUMBER(4) NOT NULL,
  cod_producto NUMBER(4) NOT NULL,
  cantidad     NUMBER(6) NOT NULL,
  CONSTRAINT DETALLE_VENTA_PK PRIMARY KEY (cod_venta, cod_producto),
  CONSTRAINT DET_VENTA_FK_VENTA    FOREIGN KEY (cod_venta)    REFERENCES VENTA(id_venta),
  CONSTRAINT DET_VENTA_FK_PRODUCTO FOREIGN KEY (cod_producto) REFERENCES PRODUCTO(id_producto)
);

/* CASO 2 */

/* 7) ÍNDICES FK */
CREATE INDEX IX_COMUNA_REGION  ON COMUNA(cod_region);
CREATE INDEX IX_PROV_COMUNA    ON PROVEEDOR(cod_comuna);
CREATE INDEX IX_PROD_MARCA     ON PRODUCTO(cod_marca);
CREATE INDEX IX_PROD_CATEGORIA ON PRODUCTO(cod_categoria);
CREATE INDEX IX_PROD_PROV      ON PRODUCTO(cod_proveedor);
CREATE INDEX IX_EMP_SALUD      ON EMPLEADO(cod_salud);
CREATE INDEX IX_EMP_AFP        ON EMPLEADO(cod_afp);
CREATE INDEX IX_EMP_SUPERVISOR ON EMPLEADO(cod_empleado);
CREATE INDEX IX_VENTA_MEDIO    ON VENTA(cod_mpago);
CREATE INDEX IX_VENTA_EMPLEADO ON VENTA(cod_empleado);

/* 8) REGLAS */
ALTER TABLE EMPLEADO  ADD CONSTRAINT EMPLEADO_ACTIVO_CK     CHECK (activo IN ('S','N'));
ALTER TABLE PRODUCTO  ADD CONSTRAINT PRODUCTO_ORIGEN_CK     CHECK (origen_nacional IN ('S','N'));
ALTER TABLE EMPLEADO  ADD CONSTRAINT EMPLEADO_SUELDO_MIN_CK CHECK (sueldo_base >= 400000);
ALTER TABLE VENDEDOR  ADD CONSTRAINT VENDEDOR_COMISION_CK   CHECK (comision_venta BETWEEN 0 AND 0.25);
ALTER TABLE PRODUCTO  ADD CONSTRAINT PRODUCTO_STOCK_MIN_CK  CHECK (stock_minimo >= 3);
ALTER TABLE PROVEEDOR ADD CONSTRAINT PROVEEDOR_EMAIL_UQ     UNIQUE (email);
ALTER TABLE MARCA     ADD CONSTRAINT MARCA_NOMBRE_UQ        UNIQUE (nombre_marca);
ALTER TABLE DETALLE_VENTA ADD CONSTRAINT DETALLE_VENTA_CANTIDAD_CK CHECK (cantidad > 0);

/* CASO 3 */

-- Región/Comuna
INSERT INTO REGION VALUES (1,'Región Metropolitana');
INSERT INTO REGION VALUES (2,'Valparaíso');
INSERT INTO REGION VALUES (3,'Biobío');
INSERT INTO REGION VALUES (4,'Los Lagos');

INSERT INTO COMUNA VALUES (1101,'Santiago',1);
INSERT INTO COMUNA VALUES (2101,'Valparaíso',2);
INSERT INTO COMUNA VALUES (3101,'Concepción',3);
INSERT INTO COMUNA VALUES (4101,'Puerto Montt',4);

-- Salud
INSERT INTO SALUD(id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL,'Fonasa');
INSERT INTO SALUD(id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL,'Isapre Colmena');
INSERT INTO SALUD(id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL,'Isapre Banmédica');
INSERT INTO SALUD(id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL,'Isapre Cruz Blanca');

-- AFP
INSERT INTO AFP(nom_afp) VALUES ('AFP Habitat');
INSERT INTO AFP(nom_afp) VALUES ('AFP Cuprum');
INSERT INTO AFP(nom_afp) VALUES ('AFP Provida');
INSERT INTO AFP(nom_afp) VALUES ('AFP PlanVital');

-- Medio de pago
INSERT INTO MEDIO_PAGO(nombre_mpago) VALUES ('Efectivo');
INSERT INTO MEDIO_PAGO(nombre_mpago) VALUES ('Tarjeta Débito');
INSERT INTO MEDIO_PAGO(nombre_mpago) VALUES ('Tarjeta Crédito');
INSERT INTO MEDIO_PAGO(nombre_mpago) VALUES ('Cheque');

-- Proveedor
INSERT INTO PROVEEDOR(id_proveedor,nombre_proveedor,rut_proveedor,telefono,email,direccion,cod_comuna)
VALUES (10001,'Distribuidora Sur SpA','76123456-7','22223333','contacto@distsur.cl','Av. Siempreviva 742',1101);

-- Marca/Categoría
INSERT INTO MARCA(id_marca,nombre_marca) VALUES (1,'Doña Marta');
INSERT INTO MARCA(id_marca,nombre_marca) VALUES (2,'La Preferida');

INSERT INTO CATEGORIA(id_categoria,nombre_categoria) VALUES (1,'Abarrotes');
INSERT INTO CATEGORIA(id_categoria,nombre_categoria) VALUES (2,'Bebidas');

-- Productos
INSERT INTO PRODUCTO(id_producto,nombre_producto,precio_unitario,origen_nacional,stock_minimo,activo,
                     cod_marca,cod_categoria,cod_proveedor)
VALUES (101,'Arroz 1Kg',1290,'S',5,'S',1,1,10001);

INSERT INTO PRODUCTO(id_producto,nombre_producto,precio_unitario,origen_nacional,stock_minimo,activo,
                     cod_marca,cod_categoria,cod_proveedor)
VALUES (102,'Bebida 1.5L',1299,'S',5,'S',2,2,10001);

-- Empleados (750..777)
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'11111111-1','Marcela','González','Pérez',DATE '2022-03-15',950000,80000,'S','Administrativo',NULL,2050,210);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'22222222-2','José','Muñoz','Ramírez',   DATE '2021-07-10',900000,75000,'S','Administrativo',NULL,2060,216);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'33333333-3','Verónica','Soto','Alarcón',DATE '2020-01-05',880000,NULL,'S','Vendedor',       750,2070,228);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'44444444-4','Luis','Reyes','Fuentes',    DATE '2023-04-01',560000,NULL,'S','Vendedor',       750,2050,210);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'55555555-5','Claudia','Fernández','Lagos',DATE '2023-04-15',600000,NULL,'S','Vendedor',      753,2070,216);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'66666666-6','Carlos','Navarro','Vega',   DATE '2023-05-01',610000,NULL,'S','Administrativo', 753,2060,216);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'77777777-7','Javiera','Pino','Rojas',    DATE '2023-05-10',650000,NULL,'S','Administrativo', 750,2050,210);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'88888888-8','Diego','Mella','Contreras', DATE '2023-05-12',620000,NULL,'S','Vendedor',       750,2060,216);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'99999999-9','Fernanda','Salas','Herrera',DATE '2023-05-18',570000,NULL,'S','Vendedor',       753,2070,228);
INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL,'10101010-0','Tomás','Vidal','Espinoza',  DATE '2023-06-01',530000,NULL,'S','Vendedor',       NULL,2050,222);

-- Subtipos
INSERT INTO ADMINISTRATIVO(id_empleado) VALUES (750);
INSERT INTO ADMINISTRATIVO(id_empleado) VALUES (753);
INSERT INTO ADMINISTRATIVO(id_empleado) VALUES (765);
INSERT INTO ADMINISTRATIVO(id_empleado) VALUES (768);

INSERT INTO VENDEDOR(id_empleado,comision_venta) VALUES (756,0.10);
INSERT INTO VENDEDOR(id_empleado,comision_venta) VALUES (759,0.08);
INSERT INTO VENDEDOR(id_empleado,comision_venta) VALUES (762,0.12);
INSERT INTO VENDEDOR(id_empleado,comision_venta) VALUES (771,0.15);
INSERT INTO VENDEDOR(id_empleado,comision_venta) VALUES (774,0.10);
INSERT INTO VENDEDOR(id_empleado,comision_venta) VALUES (777,0.12);

-- VENTAS
INSERT INTO VENTA
  (id_venta, fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (5050, DATE '2023-05-12', 225990, 12, 771);

INSERT INTO VENTA
  (id_venta, fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (5053, DATE '2023-10-23', 524990, 13, 777);

INSERT INTO VENTA
  (id_venta, fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (5056, DATE '2023-02-17', 466990, 11, 759);

-- Detalle
INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5050,102,12);
INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5053,102,13);
INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5056,102,11);

COMMIT;

/* CASO 4 */
-- Informe 1
SELECT
  e.id_empleado AS "IDENTIFICADOR",
  e.nombre_empleado||' '||e.apellido_paterno||' '||e.apellido_materno AS "NOMBRE COMPLETO",
  e.sueldo_base AS "SALARIO",
  e.bono_jefatura AS "BONIFICACION",
  (e.sueldo_base + e.bono_jefatura) AS "SALARIO SIMULADO"
FROM EMPLEADO e
WHERE e.activo='S' AND e.bono_jefatura IS NOT NULL
ORDER BY "SALARIO SIMULADO" DESC, e.apellido_paterno DESC;

-- Informe 2
SELECT
  e.nombre_empleado||' '||e.apellido_paterno||' '||e.apellido_materno AS "EMPLEADO",
  e.sueldo_base AS "SUELDO",
  0.08 AS "POSIBLE AUMENTO (%)",
  ROUND(e.sueldo_base * 0.08, 0) AS "POSIBLE AUMENTO ($)",
  (e.sueldo_base*1.08) AS "SALARIO SIMULADO"
FROM EMPLEADO e
WHERE e.sueldo_base BETWEEN 550000 AND 800000
ORDER BY e.sueldo_base ASC;